<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns1="http://www.tibco.com/pe/EngineTypes" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns4="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns3="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:ns5="sbv/common/envelope/commonheader/1.0" xmlns:pfx="sbv/common/envelope/soaenvelope/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="sbv/common/envelope/soaenvelope/1.0" schemaLocation="/SharedResource/Schema/Common/Envelope/SOAEnvelope.xsd"/>
    <xsd:import namespace="sbv/common/envelope/commonheader/1.0" schemaLocation="/SharedResource/Schema/Common/Envelope/CommonHeader.xsd"/>
    <pd:name>Util/Logging/saveLog.process</pd:name>
    <pd:description>Author: TIBCO PSG</pd:description>
    <pd:startName>LogQueueReceiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="LogQueueReceiver">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>132</pd:x>
        <pd:y>126</pd:y>
        <config>
            <PermittedMessageType>XML Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>23</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>%%Logging/logqueue%%</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/SharedResource/Connection/Jms/SOAConnection.sharedjmscon</ConnectionReference>
            <OutDataxsdString ref="pfx:SOAEnvelope"/>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>758</pd:endX>
    <pd:endY>134</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables>
        <SetNull>
            <xsd:element name="root">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="Null" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </SetNull>
    </pd:processVariables>
    <pd:targetNamespace>sbv/util/logging/savelog/1.0</pd:targetNamespace>
    <pd:activity name="Confirm">
        <pd:type>com.tibco.pe.core.ConfirmActivity</pd:type>
        <pd:resourceType>activity.confirm</pd:resourceType>
        <pd:x>631</pd:x>
        <pd:y>132</pd:y>
        <config>
            <ConfirmEvent>LogQueueReceiver</ConfirmEvent>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ParseResponseStatus">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>281</pd:x>
        <pd:y>297</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>false</validateOutput>
            <term ref="ns5:ResponseStatus"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="if (exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:ServiceBody/*)) &#xA;then  tib:render-xml($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:ServiceBody/*[1]/*[2])&#xA;else '&lt;rs:ResponseStatus xmlns:rs = &quot;sbv/common/envelope/commonheader/1.0&quot;/>'"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Write File">
        <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
        <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
        <pd:x>469</pd:x>
        <pd:y>291</pd:y>
        <config>
            <encoding>text</encoding>
            <compressFile>None</compressFile>
            <append>true</append>
            <createMissingDirectories>true</createMissingDirectories>
        </config>
        <pd:inputBindings>
            <ns3:WriteActivityInputTextClass>
                <fileName>
                    <xsl:value-of select="$_globalVariables/ns2:GlobalVariables/Logging/logfile"/>
                </fileName>
                <textContent>
                    <xsl:value-of select="concat(&quot;&#xD;&#xA;Transaction Time: &quot;, current-dateTime(),&quot;&#xD;&#xA;&quot;,tib:render-xml($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope),  &quot;&#xD;&#xA;Error Report:&quot;,$_error/ns1:ErrorReport/StackTrace)"/>
                </textContent>
                <addLineSeparator>
                    <xsl:value-of select="1"/>
                </addLineSeparator>
            </ns3:WriteActivityInputTextClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="saveLog">
        <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
        <pd:x>463</pd:x>
        <pd:y>130</pd:y>
        <config>
            <timeout>%%AMXSOADB/Timeout%%</timeout>
            <commit>false</commit>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>insert /*+ append */ into SOALOGS(soamsgid,msgid,fromid,fromname,toid,toname,msgpreid,msgsrcid,bizservid,bizservname,createdate,servicename,operationname,serviceversion,timeduration,responsestatus,errorcode,errormsg,transactionbefore,transactionafter) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)</statement>
            <jdbcSharedConfig>/SharedResource/Connection/Jdbc/AMXSOA.sharedjdbc</jdbcSharedConfig>
            <batchUpdate>false</batchUpdate>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>SOAMSGID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>MSGID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>FROMID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>FROMNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TOID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TONAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>MSGPREID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>MSGSRCID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>BIZSERVID</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>BIZSERVNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>CREATEDATE</parameterName>
                    <dataType>TIMESTAMP</dataType>
                </parameter>
                <parameter>
                    <parameterName>SERVICENAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>OPERATIONNAME</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>SERVICEVERSION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TIMEDURATION</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>RESPONSESTATUS</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ERRORCODE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>ERRORMSG</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONBEFORE</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
                <parameter>
                    <parameterName>TRANSACTIONAFTER</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
        </config>
        <pd:inputBindings>
            <xsl:variable name="Direction" select="$LogQueueReceiver/ns:ActivityOutput/DynamicProperties/property/value"/>
            <xsl:variable name="TimeDuration" select="$LogQueueReceiver/ns:ActivityOutput/DynamicProperties/property/name"/>
            <jdbcUpdateActivityInput>
                <SOAMSGID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:SOAMsgId)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:SOAMsgId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SOAMSGID>
                <MSGID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgId)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MSGID>
                <FROMID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:From/ns5:Id)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:From/ns5:Id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </FROMID>
                <FROMNAME>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:From/ns5:Name)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:From/ns5:Name"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </FROMNAME>
                <TOID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:To/ns5:Id)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:To/ns5:Id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TOID>
                <TONAME>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:To/ns5:Name)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:To/ns5:Name"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TONAME>
                <MSGPREID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgPreId)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgPreId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MSGPREID>
                <MSGSRCID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgSrcId)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:MsgSrcId"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </MSGSRCID>
                <BIZSERVID>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:BizServ/ns5:Id)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:BizServ/ns5:Id"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </BIZSERVID>
                <BIZSERVNAME>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:BizServ/ns5:Name)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:BizServ/ns5:Name"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </BIZSERVNAME>
                <CREATEDATE>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:CreatedDate)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:CreatedDate"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </CREATEDATE>
                <SERVICENAME>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:ServiceName)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:ServiceName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SERVICENAME>
                <OPERATIONNAME>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:OperationName)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:OperationName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </OPERATIONNAME>
                <SERVICEVERSION>
                    <xsl:choose>
                        <xsl:when test="exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:ServVersion)">
                            <xsl:value-of select="$LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:SOAServiceHeader/pfx:AppHdr/ns5:ServVersion"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </SERVICEVERSION>
                <TIMEDURATION>
                    <xsl:choose>
                        <xsl:when test="exists($TimeDuration[1])">
                            <xsl:value-of select="$TimeDuration[1]"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </TIMEDURATION>
                <RESPONSESTATUS>
                    <xsl:value-of select="if ($Direction = 'End') then $ParseResponseStatus/ns5:ResponseStatus/ns5:Status else $SetNull/root/Null"/>
                </RESPONSESTATUS>
                <ERRORCODE>
                    <xsl:value-of select="if ($Direction = 'End') then $ParseResponseStatus/ns5:ResponseStatus/ns5:ErrorCode else $SetNull/root/Null"/>
                </ERRORCODE>
                <ERRORMSG>
                    <xsl:value-of select="if ($Direction = 'End') then $ParseResponseStatus/ns5:ResponseStatus/ns5:ErrorMessage else $SetNull/root/Null"/>
                </ERRORMSG>
                <xsl:choose>
                    <xsl:when test="$Direction = 'Start'">
                        <TRANSACTIONBEFORE>
                            <xsl:value-of select="tib:render-xml($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope,false(),true())"/>
                        </TRANSACTIONBEFORE>
                    </xsl:when>
                    <xsl:otherwise>
                        <TRANSACTIONBEFORE>
                            <xsl:value-of select="&quot;&quot;"/>
                        </TRANSACTIONBEFORE>
                    </xsl:otherwise>
                </xsl:choose>
                <xsl:choose>
                    <xsl:when test="$Direction = 'End' and exists($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:ServiceBody/*)">
                        <TRANSACTIONAFTER>
                            <xsl:value-of select="tib:render-xml($LogQueueReceiver/ns:ActivityOutput/Body/pfx:SOAEnvelope/pfx:ServiceBody,false(),true())"/>
                        </TRANSACTIONAFTER>
                    </xsl:when>
                    <xsl:otherwise>
                        <TRANSACTIONAFTER>
                            <xsl:value-of select="&quot;&quot;"/>
                        </TRANSACTIONAFTER>
                    </xsl:otherwise>
                </xsl:choose>
            </jdbcUpdateActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>LogQueueReceiver</pd:from>
        <pd:to>saveLog</pd:to>
        <pd:xpathDescription>LogStart</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Confirm</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponseStatus</pd:from>
        <pd:to>saveLog</pd:to>
        <pd:xpathDescription>Success</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogQueueReceiver</pd:from>
        <pd:to>ParseResponseStatus</pd:to>
        <pd:xpathDescription>LogEnd</pd:xpathDescription>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$LogQueueReceiver/ns:ActivityOutput/DynamicProperties/property/value = 'End'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>ParseResponseStatus</pd:from>
        <pd:to>Write File</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Write File</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>LogQueueReceiver</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>saveLog</pd:from>
        <pd:to>Write File</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>saveLog</pd:from>
        <pd:to>Confirm</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>